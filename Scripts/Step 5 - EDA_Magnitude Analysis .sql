/*
===============================================================================
Magnitude Analysis
===============================================================================
Purpose:
    - To quantify data and group results by specific dimensions.
    - For understanding data distribution across categories.

SQL Functions Used:
    - Aggregate Functions: SUM(), COUNT(), AVG()
    - GROUP BY, ORDER BY
===============================================================================
*/


-- Find total customers by countries
			SELECT 
			country,
			COUNT(customer_key) AS NO_OF_CUSTOMER_by_country
			FROM GOLD.dim_customers
			GROUP BY country
			ORDER BY NO_OF_CUSTOMER_by_country DESC;

-- Find total customers by gender
			SELECT 
			gender,
			COUNT(customer_key) AS NO_OF_CUSTOMER_by_gender
			FROM GOLD.dim_customers
			GROUP BY gender
			ORDER BY NO_OF_CUSTOMER_by_gender DESC;

-- Find total products by category
			SELECT 
			category,
			COUNT(product_id) AS NO_OF_PRODUCTS_BY_CATEGORY
			FROM gold.dim_products
			GROUP BY category
			ORDER BY NO_OF_PRODUCTS_BY_CATEGORY DESC;
-- What is the average costs in each category?
			SELECT 
			category,
			AVG(cost) AS AVG_COST_BY_CATEGORY
			FROM gold.dim_products
			GROUP BY category
			ORDER BY AVG_COST_BY_CATEGORY DESC;
-- What is the total revenue generated for each category?
			SELECT
			P.category,SUM(F.SALES_AMOUNT) AS TOTAL_REVENUE_BY_CATEGORY
			FROM GOLD.fact_sales AS F
			LEFT JOIN GOLD.dim_products AS P
			ON P.product_key = F.product_key
			GROUP BY P.category
			ORDER BY TOTAL_REVENUE_BY_CATEGORY DESC;

-- Find total revenue is generated by each customer.
			SELECT
			C.customer_key,
			C.first_name,
			SUM(F.SALES_AMOUNT) AS TOTAL_REVENUE_BY_CUSTOMER
			FROM GOLD.fact_sales AS F
			LEFT JOIN GOLD.dim_CUSTOMERS AS C
			ON C.customer_key = F.customer_key
			GROUP BY C.customer_key,C.first_name
			ORDER BY TOTAL_REVENUE_BY_CUSTOMER DESC;


-- What is the distribution of sold items across countries?
			SELECT
			C.country,
			SUM(F.quantity) AS sold_items_across_countries
			FROM GOLD.fact_sales AS F
			LEFT JOIN GOLD.dim_CUSTOMERS AS C
			ON C.customer_key = F.customer_key
			GROUP BY C.country
			ORDER BY sold_items_across_countries DESC;